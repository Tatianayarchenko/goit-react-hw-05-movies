{"version":3,"file":"static/js/428.732977ff.chunk.js","mappings":"4TAEAA,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRF,IAAAA,IAAU,sBAAuB,CACtDG,OAAQ,CACNC,QAASH,KAHkB,cACzBI,EADyB,yBAMxBA,EAASC,KAAKC,SANU,2CAAH,qDASjBC,EAAY,mCAAG,WAAMC,GAAN,uFACHT,IAAAA,IAAU,gBAAiB,CAChDG,OAAQ,CACNC,QAASH,EACTS,MAAOD,EACPE,SAAU,QACVC,eAAe,KANO,cACpBP,EADoB,yBASnBA,EAASC,KAAKC,SATK,2CAAH,sDAYZM,EAAY,mCAAG,WAAMC,GAAN,uFACHd,IAAAA,IAAA,iBAAoBc,GAAW,CACpDX,OAAQ,CACNC,QAASH,EACTU,SAAU,QACVC,eAAe,KALO,cACpBP,EADoB,yBAQnBA,EAASC,MARU,2CAAH,sDAWZS,EAAO,mCAAG,WAAMD,GAAN,uFACEd,IAAAA,IAAA,iBAAoBc,EAApB,YAAuC,CAC5DX,OAAQ,CACNC,QAASH,EACTU,SAAU,WAJO,cACfN,EADe,yBAQdA,EAASC,KAAKU,MARA,2CAAH,sDAWPC,EAAU,mCAAG,WAAMH,GAAN,uFACDd,IAAAA,IAAA,iBAAoBc,EAApB,YAAuC,CAC5DX,OAAQ,CACNC,QAASH,EACTU,SAAU,WAJU,cAClBN,EADkB,yBAQjBA,EAASC,KAAKC,SARG,2CAAH,uD,0NC/CVW,EAAQC,EAAAA,GAAAA,GAAH,iFAMLC,EAAWD,EAAAA,GAAAA,IAAH,0CAIRE,EAAWF,EAAAA,GAAAA,IAAH,0C,SCRRG,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClBC,EAAuDD,EAAvDC,MAAOC,EAAgDF,EAAhDE,aAAcC,EAAkCH,EAAlCG,SAAUC,EAAwBJ,EAAxBI,OAAQC,EAAgBL,EAAhBK,YAEzCC,EAAeD,EAAW,yCACMA,GAClCE,EAEJ,OACE,0BACE,UAACV,EAAD,YACE,gBAAKW,IAAKF,EAAcG,IAAI,QAAQC,MAAM,SAC1C,UAACZ,EAAD,YACE,SAACH,EAAD,UAAQM,KACR,0BACE,sCADF,IACqBU,KAAKC,MAAqB,GAAfV,GADhC,QAGA,0BACE,oCADF,IACmBC,MAEnB,qCACA,wBACGC,EAAOS,KAAI,SAAAC,GAAK,OACf,wBAAoBA,EAAMC,MAAjBD,EAAME,kBCvBhBrB,EAAQC,EAAAA,GAAAA,GAAH,iFAMLqB,EAAYrB,EAAAA,GAAAA,IAAH,0CAITsB,GAAqBtB,EAAAA,EAAAA,IAAOuB,EAAAA,GAAPvB,CAAH,2CCwC/B,EA5CoB,WAAO,IAAD,IAChBL,GAAY6B,EAAAA,EAAAA,MAAZ7B,QACR,GAA0B8B,EAAAA,EAAAA,UAAS,MAAnC,eAAOrB,EAAP,KAAcsB,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAQ,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAczC,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAK,IACYC,EADb,mCACF,qGACqBvC,EAAAA,EAAAA,IAAaC,GADlC,OACQR,EADR,OAEEuC,EAASvC,GAFX,2CADE,qDAKF8C,IACA,MAAOC,GACPC,EAAAA,GAAAA,MAAY,8CAEb,CAACxC,IAECS,GAKH,UAACiB,EAAD,YACE,SAAC,KAAD,CAAMe,GAAIP,EAAV,sBACA,SAAC1B,EAAD,CAAWC,MAAOA,KAElB,SAAC,EAAD,sCACA,2BACE,SAACkB,EAAD,CAAoBc,GAAG,OAAON,MAAO,CAAEC,KAAMJ,EAASG,MAAMC,MAA5D,mBAGA,SAACT,EAAD,CAAoBc,GAAG,UAAUN,MAAO,CAAEC,KAAMJ,EAASG,MAAMC,MAA/D,yBAKF,SAAC,EAAAM,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACE,SAAC,KAAD,SAnBG,O","sources":["api/api.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","pages/MovieDetals/MovieDetals.styled.js","pages/MovieDetals/MovieDetals.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '1d1120e9d6d730509fa5db5176245d73';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const searchMovies = async searchQuery => {\n  const response = await axios.get('/search/movie', {\n    params: {\n      api_key: API_KEY,\n      query: searchQuery,\n      language: 'en-US',\n      include_adult: false,\n    },\n  });\n  return response.data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      include_adult: false,\n    },\n  });\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  font-size: 30px;\n  margin-top: 0;\n  color: #89495e;\n`;\n\nexport const CardWrap = styled.div`\n  display: flex;\n`;\n\nexport const CardInfo = styled.div`\n  padding: 20px;\n`;\n","import defaultImage from 'components/defaultImage/default-profile.jpg';\nimport { CardInfo, CardWrap, Title } from './MovieCard.styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({ movie }) => {\n  const { title, vote_average, overview, genres, poster_path } = movie;\n\n  const imageUrlPath = poster_path\n    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n    : defaultImage;\n\n  return (\n    <div>\n      <CardWrap>\n        <img src={imageUrlPath} alt=\"title\" width=\"240\" />\n        <CardInfo>\n          <Title>{title}</Title>\n          <p>\n            <b>User Score</b> {Math.round(vote_average * 10)}%\n          </p>\n          <p>\n            <b>Overview</b> {overview}\n          </p>\n          <b> Genres </b>\n          <ul>\n            {genres.map(genre => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </ul>\n        </CardInfo>\n      </CardWrap>\n    </div>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Title = styled.h2`\n  font-size: 24px;\n  margin-top: 0;\n  color: #89495e;\n`;\n\nexport const Container = styled.div`\n  padding: 30px;\n`;\n\nexport const AdditionalInfoLink = styled(NavLink)`\n  display: block;\n`;\n","import { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieById } from 'api/api';\nimport { useState, useEffect, Suspense } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Loading } from 'components/Loader/Loader';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { Container, Title, AdditionalInfoLink } from './MovieDetals.styled';\n\nconst MovieDetals = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    try {\n      async function getMovieDetals() {\n        const data = await getMovieById(movieId);\n        setMovie(data);\n      }\n      getMovieDetals();\n    } catch (error) {\n      toast.error('Something went wrong. Please try again.');\n    }\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  return (\n    <Container>\n      <Link to={backLink}>Go back</Link>\n      <MovieCard movie={movie} />\n\n      <Title>Additional information</Title>\n      <ul>\n        <AdditionalInfoLink to=\"cast\" state={{ from: location.state.from }}>\n          Cast\n        </AdditionalInfoLink>\n        <AdditionalInfoLink to=\"reviews\" state={{ from: location.state.from }}>\n          Reviews\n        </AdditionalInfoLink>\n      </ul>\n\n      <Suspense fallback={<Loading />}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default MovieDetals;\n"],"names":["axios","API_KEY","getTrendingMovies","params","api_key","response","data","results","searchMovies","searchQuery","query","language","include_adult","getMovieById","movieId","getCast","cast","getReviews","Title","styled","CardWrap","CardInfo","MovieCard","movie","title","vote_average","overview","genres","poster_path","imageUrlPath","defaultImage","src","alt","width","Math","round","map","genre","name","id","Container","AdditionalInfoLink","NavLink","useParams","useState","setMovie","location","useLocation","backLink","state","from","useEffect","getMovieDetals","error","toast","to","Suspense","fallback"],"sourceRoot":""}