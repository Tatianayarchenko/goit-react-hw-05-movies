{"version":3,"file":"static/js/247.84aecdde.chunk.js","mappings":"4TAEAA,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRF,IAAAA,IAAU,sBAAuB,CACtDG,OAAQ,CACNC,QAASH,KAHkB,cACzBI,EADyB,yBAMxBA,EAASC,KAAKC,SANU,2CAAH,qDASjBC,EAAY,mCAAG,WAAMC,GAAN,uFACHT,IAAAA,IAAU,gBAAiB,CAChDG,OAAQ,CACNC,QAASH,EACTS,MAAOD,EACPE,SAAU,QACVC,eAAe,KANO,cACpBP,EADoB,yBASnBA,EAASC,KAAKC,SATK,2CAAH,sDAYZM,EAAY,mCAAG,WAAMC,GAAN,uFACHd,IAAAA,IAAA,iBAAoBc,GAAW,CACpDX,OAAQ,CACNC,QAASH,EACTU,SAAU,QACVC,eAAe,KALO,cACpBP,EADoB,yBAQnBA,EAASC,MARU,2CAAH,sDAYZS,EAAO,mCAAG,WAAMD,GAAN,uFACEd,IAAAA,IAAA,iBAAoBc,EAApB,YAAuC,CAC5DX,OAAQ,CACNC,QAASH,EACTU,SAAU,WAJO,cACfN,EADe,yBAQdA,EAASC,KAAKU,MARA,2CAAH,sDAWPC,EAAU,mCAAG,WAAMH,GAAN,uFACDd,IAAAA,IAAA,iBAAoBc,EAApB,YAAuC,CAC5DX,OAAQ,CACNC,QAASH,EACTU,SAAU,WAJU,cAClBN,EADkB,yBAQjBA,EAASC,KAAKC,SARG,2CAAH,uD,2ICGvB,UA9Ca,WACX,IAAQO,GAAYI,EAAAA,EAAAA,MAAZJ,QACR,GAA0BK,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAK,IACYC,EADb,mCACF,qGACqBR,EAAAA,EAAAA,IAAQD,GAD7B,OACQR,EADR,OAEEe,EAASf,GAFX,2CADE,qDAMFiB,IACA,MAAOC,GACPC,EAAAA,GAAAA,MAAY,8CAEb,CAACX,IAECM,EAIgB,IAAjBA,EAAMM,QACD,oEAIP,0BACE,wBACGN,EAAMO,MAAM,EAAG,IAAIC,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAC3CC,EAAQH,EAAY,yCACYA,GAClCI,EAEJ,OACE,2BACE,gBAAKC,IAAKF,EAAOG,IAAI,OAAOC,MAAM,QAClC,uBAAIN,KACJ,uCAAeC,OAHRH,UAhBV,O","sources":["api/api.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '1d1120e9d6d730509fa5db5176245d73';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const searchMovies = async searchQuery => {\n  const response = await axios.get('/search/movie', {\n    params: {\n      api_key: API_KEY,\n      query: searchQuery,\n      language: 'en-US',\n      include_adult: false,\n    },\n  });\n  return response.data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      include_adult: false,\n    },\n  });\n  return response.data;\n  // .find(movie => movie.id === movieId)\n};\n\nexport const getCast = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  // console.log(response);\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  // console.log(response);\n  return response.data.results;\n};\n\n// const requestPopularFilms =\n//   'https://api.themoviedb.org/3/movie/popular?api_key=1d1120e9d6d730509fa5db5176245d73&language=en-US&page=1';\n\n// /trending/movie/day\n\n// const SearchMoviesURL =\n//   'https://api.themoviedb.org/3/search/movie?api_key=1d1120e9d6d730509fa5db5176245d73&language=en-US&page=1&include_adult=false';\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'api/api';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport defaultImage from 'components/defaultImage/default-profile.jpg';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [casts, setCasts] = useState(null);\n\n  useEffect(() => {\n    try {\n      async function getMovieCast() {\n        const data = await getCast(movieId);\n        setCasts(data);\n        // console.log(data);\n      }\n      getMovieCast();\n    } catch (error) {\n      toast.error('Something went wrong. Please try again.');\n    }\n  }, [movieId]);\n\n  if (!casts) {\n    return null;\n  }\n\n  if (casts.length === 0) {\n    return <p>We don't have any casts for this movie.</p>;\n  }\n\n  return (\n    <div>\n      <ul>\n        {casts.slice(0, 20).map(({ id, profile_path, name, character }) => {\n          const image = profile_path\n            ? `https://image.tmdb.org/t/p/w500${profile_path}`\n            : defaultImage;\n\n          return (\n            <li key={id}>\n              <img src={image} alt=\"name\" width=\"60\" />\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","API_KEY","getTrendingMovies","params","api_key","response","data","results","searchMovies","searchQuery","query","language","include_adult","getMovieById","movieId","getCast","cast","getReviews","useParams","useState","casts","setCasts","useEffect","getMovieCast","error","toast","length","slice","map","id","profile_path","name","character","image","defaultImage","src","alt","width"],"sourceRoot":""}