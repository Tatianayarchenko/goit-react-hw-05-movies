{"version":3,"file":"static/js/452.dea13894.chunk.js","mappings":"mTAGMA,E,MAAWC,GAAAA,OAAa,CAC5BC,QCJsB,+BDKtBC,OAAQ,CACNC,QCLmB,mCDMnBC,SAAU,QACVC,eAAe,KAINC,EAAiB,mCAAG,oGACRP,EAASQ,IAAI,uBADL,cACzBC,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qDAKjBC,EAAY,mCAAG,WAAMC,GAAN,uFACHb,EAASQ,IAAI,gBAAiB,CACnDL,OAAQ,CACNW,MAAOD,KAHe,cACpBJ,EADoB,yBAMnBA,EAASC,KAAKC,SANK,2CAAH,sDASZI,EAAY,mCAAG,WAAMC,GAAN,uFACHhB,EAASQ,IAAT,iBAAuBQ,IADpB,cACpBP,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZO,EAAO,mCAAG,WAAMD,GAAN,uFACEhB,EAASQ,IAAT,iBAAuBQ,EAAvB,aADF,cACfP,EADe,yBAEdA,EAASC,KAAKQ,MAFA,2CAAH,sDAKPC,EAAU,mCAAG,WAAMH,GAAN,uFACDhB,EAASQ,IAAT,iBAAuBQ,EAAvB,aADC,cAClBP,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,uD,iLElCVS,EAAW,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACzB,OACE,0BACE,wBACGA,EAAMC,MAAM,EAAG,IAAIC,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAC3CC,EAAQH,EAAY,yCACYA,GAClCI,EAEJ,OACE,2BACE,gBAAKC,IAAKF,EAAOG,IAAI,OAAOC,MAAM,QAClC,uBAAIN,KACJ,uCAAeC,OAHRH,WCsBrB,EA3Ba,WACX,IAAQR,GAAYiB,EAAAA,EAAAA,MAAZjB,QACR,GAA0BkB,EAAAA,EAAAA,UAAS,MAAnC,eAAOb,EAAP,KAAcc,EAAd,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAK,IACYC,EADb,mCACF,qGACqBpB,EAAAA,EAAAA,IAAQD,GAD7B,OACQN,EADR,OAEEyB,EAASzB,GAFX,2CADE,qDAKF2B,IACA,MAAOC,GACPC,EAAAA,GAAAA,MAAY,8CAEb,CAACvB,IAECK,EAIgB,IAAjBA,EAAMmB,QACD,oEAGF,SAACpB,EAAD,CAAUC,MAAOA,IAPf,O","sources":["api/fetchApi.js","constants/api.js","components/CastList/CastList.jsx","pages/MovieDetals/Casts/Casts.jsx"],"sourcesContent":["import axios from 'axios';\nimport { API_KEY, BASE_URL } from 'constants/api';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const response = await instance.get('/trending/movie/day');\n  return response.data.results;\n};\n\nexport const searchMovies = async searchQuery => {\n  const response = await instance.get('/search/movie', {\n    params: {\n      query: searchQuery,\n    },\n  });\n  return response.data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const response = await instance.get(`/movie/${movieId}`);\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await instance.get(`/movie/${movieId}/credits`);\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await instance.get(`/movie/${movieId}/reviews`);\n  return response.data.results;\n};\n","export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '1d1120e9d6d730509fa5db5176245d73';\n","import defaultImage from 'images/default-profile.jpg';\n\nexport const CastList = ({ casts }) => {\n  return (\n    <div>\n      <ul>\n        {casts.slice(0, 20).map(({ id, profile_path, name, character }) => {\n          const image = profile_path\n            ? `https://image.tmdb.org/t/p/w500${profile_path}`\n            : defaultImage;\n\n          return (\n            <li key={id}>\n              <img src={image} alt=\"name\" width=\"60\" />\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'api/fetchApi';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { CastList } from 'components/CastList/CastList';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [casts, setCasts] = useState(null);\n\n  useEffect(() => {\n    try {\n      async function getMovieCast() {\n        const data = await getCast(movieId);\n        setCasts(data);\n      }\n      getMovieCast();\n    } catch (error) {\n      toast.error('Something went wrong. Please try again.');\n    }\n  }, [movieId]);\n\n  if (!casts) {\n    return null;\n  }\n\n  if (casts.length === 0) {\n    return <p>We don't have any casts for this movie.</p>;\n  }\n\n  return <CastList casts={casts} />;\n};\n\nexport default Cast;\n"],"names":["instance","axios","baseURL","params","api_key","language","include_adult","getTrendingMovies","get","response","data","results","searchMovies","searchQuery","query","getMovieById","movieId","getCast","cast","getReviews","CastList","casts","slice","map","id","profile_path","name","character","image","defaultImage","src","alt","width","useParams","useState","setCasts","useEffect","getMovieCast","error","toast","length"],"sourceRoot":""}