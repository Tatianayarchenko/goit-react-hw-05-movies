{"version":3,"file":"static/js/709.0cd00a02.chunk.js","mappings":"mTAGMA,E,MAAWC,GAAAA,OAAa,CAC5BC,QCJsB,+BDKtBC,OAAQ,CACNC,QCLmB,mCDMnBC,SAAU,QACVC,eAAe,KAINC,EAAiB,mCAAG,oGACRP,EAASQ,IAAI,uBADL,cACzBC,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qDAKjBC,EAAY,mCAAG,WAAMC,GAAN,uFACHb,EAASQ,IAAI,gBAAiB,CACnDL,OAAQ,CACNW,MAAOD,KAHe,cACpBJ,EADoB,yBAMnBA,EAASC,KAAKC,SANK,2CAAH,sDASZI,EAAY,mCAAG,WAAMC,GAAN,uFACHhB,EAASQ,IAAT,iBAAuBQ,IADpB,cACpBP,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZO,EAAO,mCAAG,WAAMD,GAAN,uFACEhB,EAASQ,IAAT,iBAAuBQ,EAAvB,aADF,cACfP,EADe,yBAEdA,EAASC,KAAKQ,MAFA,2CAAH,sDAKPC,EAAU,mCAAG,WAAMH,GAAN,uFACDhB,EAASQ,IAAT,iBAAuBQ,EAAvB,aADC,cAClBP,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,uD,uKEpCVS,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,OACE,0BACE,wBACGA,EAAQC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,oCAAYD,MACZ,uBAAIC,MAFGF,WC6BnB,EA3BgB,WACd,IAAQP,GAAYU,EAAAA,EAAAA,MAAZV,QACR,GAA8BW,EAAAA,EAAAA,UAAS,MAAvC,eAAON,EAAP,KAAgBO,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAK,IACYC,EADb,mCACF,qGACqBX,EAAAA,EAAAA,IAAWH,GADhC,OACQN,EADR,OAEEkB,EAAWlB,GAFb,2CADE,qDAKFoB,IACA,MAAOC,GACPC,EAAAA,GAAAA,MAAY,8CAEb,CAAChB,IAECK,EAIkB,IAAnBA,EAAQY,QACH,sEAGF,SAACb,EAAD,CAAaC,QAASA,IAPpB","sources":["api/fetchApi.js","constants/api.js","components/ReviewsList/ReviewsList.jsx","pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nimport { API_KEY, BASE_URL } from 'constants/api';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const response = await instance.get('/trending/movie/day');\n  return response.data.results;\n};\n\nexport const searchMovies = async searchQuery => {\n  const response = await instance.get('/search/movie', {\n    params: {\n      query: searchQuery,\n    },\n  });\n  return response.data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const response = await instance.get(`/movie/${movieId}`);\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await instance.get(`/movie/${movieId}/credits`);\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await instance.get(`/movie/${movieId}/reviews`);\n  return response.data.results;\n};\n","export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '1d1120e9d6d730509fa5db5176245d73';\n","export const ReviewsList = ({ reviews }) => {\n  return (\n    <div>\n      <ul>\n        {reviews.map(({ id, author, content }) => (\n          <li key={id}>\n            <b>Author: {author}</b>\n            <p>{content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'api/fetchApi';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ReviewsList } from 'components/ReviewsList/ReviewsList';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    try {\n      async function getMovieReviews() {\n        const data = await getReviews(movieId);\n        setReviews(data);\n      }\n      getMovieReviews();\n    } catch (error) {\n      toast.error('Something went wrong. Please try again.');\n    }\n  }, [movieId]);\n\n  if (!reviews) {\n    return null;\n  }\n\n  if (reviews.length === 0) {\n    return <p>We don't have any reviews for this movie.</p>;\n  }\n\n  return <ReviewsList reviews={reviews} />;\n};\n\nexport default Reviews;\n"],"names":["instance","axios","baseURL","params","api_key","language","include_adult","getTrendingMovies","get","response","data","results","searchMovies","searchQuery","query","getMovieById","movieId","getCast","cast","getReviews","ReviewsList","reviews","map","id","author","content","useParams","useState","setReviews","useEffect","getMovieReviews","error","toast","length"],"sourceRoot":""}