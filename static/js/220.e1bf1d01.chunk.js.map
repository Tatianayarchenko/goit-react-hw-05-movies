{"version":3,"file":"static/js/220.e1bf1d01.chunk.js","mappings":"mTAGMA,E,MAAWC,GAAAA,OAAa,CAC5BC,QCJsB,+BDKtBC,OAAQ,CACNC,QCLmB,mCDMnBC,SAAU,QACVC,eAAe,KAINC,EAAiB,mCAAG,oGACRP,EAASQ,IAAI,uBADL,cACzBC,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qDAKjBC,EAAY,mCAAG,WAAMC,GAAN,uFACHb,EAASQ,IAAI,gBAAiB,CACnDL,OAAQ,CACNW,MAAOD,KAHe,cACpBJ,EADoB,yBAMnBA,EAASC,KAAKC,SANK,2CAAH,sDASZI,EAAY,mCAAG,WAAMC,GAAN,uFACHhB,EAASQ,IAAT,iBAAuBQ,IADpB,cACpBP,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZO,EAAO,mCAAG,WAAMD,GAAN,uFACEhB,EAASQ,IAAT,iBAAuBQ,EAAvB,aADF,cACfP,EADe,yBAEdA,EAASC,KAAKQ,MAFA,2CAAH,sDAKPC,EAAU,mCAAG,WAAMH,GAAN,uFACDhB,EAASQ,IAAT,iBAAuBQ,EAAvB,aADC,cAClBP,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,uD,oEElCVS,E,QAAeC,GAAAA,GAAH,8E,sNCAZC,EAAWD,EAAAA,GAAAA,IAAH,0CAIRE,EAAWF,EAAAA,GAAAA,IAAH,0CCJRG,EAAiBH,EAAAA,GAAAA,GAAH,iF,SCGdI,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClBC,EAAuDD,EAAvDC,MAAOC,EAAgDF,EAAhDE,aAAcC,EAAkCH,EAAlCG,SAAUC,EAAwBJ,EAAxBI,OAAQC,EAAgBL,EAAhBK,YAEzCC,EAAeD,EAAW,yCACMA,GAClCE,EAEJ,OACE,0BACE,UAACX,EAAD,YACE,gBAAKY,IAAKF,EAAcG,IAAI,QAAQC,MAAM,SAC1C,UAACb,EAAD,YACE,SAACC,EAAD,UAAiBG,KACjB,0BACE,sCADF,IACqBU,KAAKC,MAAqB,GAAfV,GADhC,QAGA,0BACE,oCADF,IACmBC,MAEnB,qCACA,wBACGC,EAAOS,KAAI,SAAAC,GAAK,OACf,wBAAoBA,EAAMC,MAAjBD,EAAME,kBCxBhBC,GAAqBtB,EAAAA,EAAAA,IAAOuB,EAAAA,GAAPvB,CAAH,2C,UCmD/B,EA5CoB,WAAO,IAAD,IAChBL,GAAY6B,EAAAA,EAAAA,MAAZ7B,QACR,GAA0B8B,EAAAA,EAAAA,UAAS,MAAnC,eAAOpB,EAAP,KAAcqB,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAQ,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAczC,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAK,IACYC,EADb,mCACF,qGACqBvC,EAAAA,EAAAA,IAAaC,GADlC,OACQN,EADR,OAEEqC,EAASrC,GAFX,2CADE,qDAKF4C,IACA,MAAOC,GACPC,EAAAA,GAAAA,MAAY,8CAEb,CAACxC,IAECU,GAKH,iCACE,SAAC,KAAD,CAAM+B,GAAIP,EAAV,sBACA,SAACzB,EAAD,CAAWC,MAAOA,KAElB,SAAC,IAAD,sCACA,2BACE,SAACiB,EAAD,CAAoBc,GAAG,OAAON,MAAO,CAAEC,KAAMJ,EAASG,MAAMC,MAA5D,mBAGA,SAACT,EAAD,CAAoBc,GAAG,UAAUN,MAAO,CAAEC,KAAMJ,EAASG,MAAMC,MAA/D,yBAKF,SAAC,EAAAM,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACE,SAAC,KAAD,SAnBG,O","sources":["api/fetchApi.js","constants/api.js","components/Titles/PrimaryTitle.styled.js","components/MovieCard/MovieCard.styled.js","components/Titles/SecondaryTitle.styled.js","components/MovieCard/MovieCard.jsx","pages/MovieDetals/MovieDetals.styled.js","pages/MovieDetals/MovieDetals.jsx"],"sourcesContent":["import axios from 'axios';\nimport { API_KEY, BASE_URL } from 'constants/api';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const response = await instance.get('/trending/movie/day');\n  return response.data.results;\n};\n\nexport const searchMovies = async searchQuery => {\n  const response = await instance.get('/search/movie', {\n    params: {\n      query: searchQuery,\n    },\n  });\n  return response.data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const response = await instance.get(`/movie/${movieId}`);\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await instance.get(`/movie/${movieId}/credits`);\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await instance.get(`/movie/${movieId}/reviews`);\n  return response.data.results;\n};\n","export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '1d1120e9d6d730509fa5db5176245d73';\n","import styled from 'styled-components';\n\nexport const PrimaryTitle = styled.h1`\n  font-size: 24px;\n  margin: 0;\n  color: #89495e;\n`;\n","import styled from 'styled-components';\n\nexport const CardWrap = styled.div`\n  display: flex;\n`;\n\nexport const CardInfo = styled.div`\n  padding: 20px;\n`;\n","import styled from 'styled-components';\n\nexport const SecondaryTitle = styled.h1`\n  font-size: 30px;\n  margin-top: 0;\n  color: #89495e;\n`;\n","import defaultImage from 'images/default-profile.jpg';\nimport { CardInfo, CardWrap } from './MovieCard.styled';\nimport PropTypes from 'prop-types';\nimport { SecondaryTitle } from 'components/Titles/SecondaryTitle.styled';\n\nexport const MovieCard = ({ movie }) => {\n  const { title, vote_average, overview, genres, poster_path } = movie;\n\n  const imageUrlPath = poster_path\n    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n    : defaultImage;\n\n  return (\n    <div>\n      <CardWrap>\n        <img src={imageUrlPath} alt=\"title\" width=\"240\" />\n        <CardInfo>\n          <SecondaryTitle>{title}</SecondaryTitle>\n          <p>\n            <b>User Score</b> {Math.round(vote_average * 10)}%\n          </p>\n          <p>\n            <b>Overview</b> {overview}\n          </p>\n          <b> Genres </b>\n          <ul>\n            {genres.map(genre => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </ul>\n        </CardInfo>\n      </CardWrap>\n    </div>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const AdditionalInfoLink = styled(NavLink)`\n  display: block;\n`;\n","import { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieById } from 'api/fetchApi';\nimport { useState, useEffect, Suspense } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Loading } from 'components/Loader/Loader';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { AdditionalInfoLink } from './MovieDetals.styled';\nimport { PrimaryTitle } from 'components/Titles/PrimaryTitle.styled';\n\nconst MovieDetals = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    try {\n      async function getMovieDetals() {\n        const data = await getMovieById(movieId);\n        setMovie(data);\n      }\n      getMovieDetals();\n    } catch (error) {\n      toast.error('Something went wrong. Please try again.');\n    }\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  return (\n    <>\n      <Link to={backLink}>Go back</Link>\n      <MovieCard movie={movie} />\n\n      <PrimaryTitle>Additional information</PrimaryTitle>\n      <ul>\n        <AdditionalInfoLink to=\"cast\" state={{ from: location.state.from }}>\n          Cast\n        </AdditionalInfoLink>\n        <AdditionalInfoLink to=\"reviews\" state={{ from: location.state.from }}>\n          Reviews\n        </AdditionalInfoLink>\n      </ul>\n\n      <Suspense fallback={<Loading />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetals;\n"],"names":["instance","axios","baseURL","params","api_key","language","include_adult","getTrendingMovies","get","response","data","results","searchMovies","searchQuery","query","getMovieById","movieId","getCast","cast","getReviews","PrimaryTitle","styled","CardWrap","CardInfo","SecondaryTitle","MovieCard","movie","title","vote_average","overview","genres","poster_path","imageUrlPath","defaultImage","src","alt","width","Math","round","map","genre","name","id","AdditionalInfoLink","NavLink","useParams","useState","setMovie","location","useLocation","backLink","state","from","useEffect","getMovieDetals","error","toast","to","Suspense","fallback"],"sourceRoot":""}